[{"C:\\study\\react-app\\src\\index.js":"1","C:\\study\\react-app\\src\\App.js":"2","C:\\study\\react-app\\src\\reportWebVitals.js":"3","C:\\study\\react-app\\src\\Subject.js":"4","C:\\study\\react-app\\src\\TOC.js":"5","C:\\study\\react-app\\src\\Control.js":"6","C:\\study\\react-app\\src\\CreateContent.js":"7","C:\\study\\react-app\\src\\ReadContent.js":"8","C:\\study\\react-app\\src\\UpdateContent.js":"9"},{"size":500,"mtime":1638768121429,"results":"10","hashOfConfig":"11"},{"size":3555,"mtime":1639021436454,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1638768121568,"results":"13","hashOfConfig":"11"},{"size":505,"mtime":1638922940750,"results":"14","hashOfConfig":"11"},{"size":697,"mtime":1638931264347,"results":"15","hashOfConfig":"11"},{"size":705,"mtime":1639013641880,"results":"16","hashOfConfig":"11"},{"size":718,"mtime":1639014311104,"results":"17","hashOfConfig":"11"},{"size":245,"mtime":1639015830046,"results":"18","hashOfConfig":"11"},{"size":1217,"mtime":1639027231251,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"2b03vj",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\study\\react-app\\src\\index.js",[],["41","42"],"C:\\study\\react-app\\src\\App.js",["43","44","45","46"],"import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport { Subject } from './Subject';\nimport { TOC } from './TOC';\nimport { ReadContent } from './ReadContent';\nimport Control from './Control';\nimport CreateContent from './CreateContent';\nimport UpdateContent from './UpdateContent';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subject: { title: 'WEB', sub: 'World Wide Web!' },\n      contents: [\n        {id: 1, title: 'HTML2', desc: 'HTML is for information.'},\n        {id: 2, title: 'CSS2', desc: 'CSS is for design.'},\n        {id: 3, title: 'JavaScript2', desc: 'JavaScript is for interactive.'}\n      ],\n      mode: 'welcome',  // html\n      welcome: {title: 'welcome', desc: 'Hello, React'}\n    }\n  }\n\n  // 조회와 수정 컴포넌트가 공통으로 사용하기 위해서 (여러번 호출되니까)\n  findContentById() {\n    // 선택된 요소(html, css, js)의 id에 해당하는 객체 찾기\n    let content;\n    for(let i = 0; i < this.state.contents.length; i++) {\n      if(this.state.id == this.state.contents[i].id) {\n        content = this.state.contents[i];\n        break;\n      }\n    }\n    return content;\n  }\n\n  render() {\n    let title, desc;\n    let article;\n    if(this.state.mode == 'welcome') {\n      title = this.state.welcome.title;\n      desc = this.state.welcome.desc;\n\n    } else if (this.state.mode === 'update') {\n      const content = this.findContentById();\n      title = content.title;\n      desc = content.desc;\n      article = <UpdateContent\n      title={title} desc={desc}></UpdateContent>\n      \n\n    } else if (this.state.mode === 'read') {\n      const content = this.findContentById();\n      title = content.title;\n      desc = content.desc;\n      \n\n    } else if (this.state.mode == 'create') {\n      article = <CreateContent\n        onSubmit={function (title, desc) {\n          console.log(title, desc);\n          this.state.contents.push({\n            id: this.state.contents.length + 1,\n            title: title,\n            desc: desc\n          });\n          this.setState({\n            contents: this.state.contents\n          })\n        }.bind(this)}></CreateContent>\n    }\n\n    return (   // JSX\n      <div className=\"App\">\n        <Subject\n        title={this.state.subject.title} \n        sub={this.state.subject.sub}></Subject>\n\n        <TOC onChangePage={\n          (value) => { \n            this.setState({id: value, mode: 'read'}) \n          }\n\n        } contents={this.state.contents}></TOC>\n\n        <Control onChangeMode={function (mode) {\n          this.setState({ mode: mode });\n        }.bind(this)} />\n\n        {/* 조회와 수정 컴포넌트에서 title desc를 공통으로 사용 */}\n        <ReadContent title={title} desc={desc}></ReadContent>\n      \n        {article}\n      </div>\n    );\n  }\n}\n<Control onChangeMode={function (mode) {\n  if (mode === 'delete') {\n    const contents = this.state.contents;\n    if (window.confirm('really?')) {\n      for (let i = 0; i < contents.length; i++) {\n        if (contents[i].id === this.state.selected_content_id) {\n          contents.splice(i, 1);\n        }\n      }\n    }\n    this.setState({\n      mode: 'welcome', contents: contents\n    });\n  } else {\n    this.setState({ mode: mode });\n  }\n}.bind(this)}></Control>\n\n// function App() {\n//   return (   // JSX\n//     <div className=\"App\">\n//       <table border='1'>\n//         <tr>\n//           <td>1</td><td>2</td>\n//         </tr>\n//       </table>\n//     </div>\n//   );\n// }\n\nexport default App;\n","C:\\study\\react-app\\src\\reportWebVitals.js",[],"C:\\study\\react-app\\src\\Subject.js",["47"],"import { Component } from 'react';\r\n\r\nclass Subject extends Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <h1>\r\n                    <a href='' onClick={(e) => {\r\n                        alert('hello');\r\n                        e.preventDefault();\r\n                    }}>\r\n                        {this.props.title}\r\n                    </a>\r\n                </h1>\r\n                {this.props.sub}\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport { Subject };","C:\\study\\react-app\\src\\TOC.js",[],"C:\\study\\react-app\\src\\Control.js",[],"C:\\study\\react-app\\src\\CreateContent.js",[],"C:\\study\\react-app\\src\\ReadContent.js",[],"C:\\study\\react-app\\src\\UpdateContent.js",["48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":12},{"ruleId":"57","severity":1,"message":"58","line":31,"column":24,"nodeType":"59","messageId":"60","endLine":31,"endColumn":26},{"ruleId":"57","severity":1,"message":"58","line":42,"column":24,"nodeType":"59","messageId":"60","endLine":42,"endColumn":26},{"ruleId":"57","severity":1,"message":"58","line":60,"column":32,"nodeType":"59","messageId":"60","endLine":60,"endColumn":34},{"ruleId":"61","severity":1,"message":"62","line":8,"column":21,"nodeType":"63","endLine":11,"endColumn":24},{"ruleId":null,"fatal":true,"severity":2,"message":"64","line":34,"column":42},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 32 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 33 |\u001b[39m \u001b[33m<\u001b[39m\u001b[33mp\u001b[39m\u001b[33m>\u001b[39m\u001b[33m<\u001b[39m\u001b[33mtextarea\u001b[39m name\u001b[33m=\u001b[39m\u001b[32m'desc'\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m value\u001b[33m=\u001b[39m{\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mstate\u001b[33m.\u001b[39mdesc} onChange\u001b[33m=\u001b[39m{( e )} \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 35 |\u001b[39m     \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39msetState\u001b[33m.\u001b[39mtitle({desc\u001b[33m:\u001b[39m \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mp\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 36 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mdefault\u001b[39m \u001b[33mUpdateContent\u001b[39m\u001b[33m;\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation"]